---
import Layout from '~/layouts/Layout.astro';
import comments from '~/data/comments';
import genomes from '~/data/genomes.json';
import GenomeHeader from '~/components/GenomeHeader.astro';
import type { Comment } from '~/types/pubs';

export function getStaticPaths() {
	return genomes.map((genome) => {
		return { params: { slug: genome.slug } };
	});
}
const { slug } = Astro.params;
const activeGenome = genomes.find((genome) => {
	return genome.slug === slug;
});
if (!activeGenome) {
	return null;
}
const activeComments = comments.filter((comment) => {
	return comment.genomeId === activeGenome.id;
});
type NestedComment = Comment & { replies: Comment[] };
const nestComments = (comments: Comment[]): NestedComment[] => {
	const commentMap = new Map();

	comments.forEach((comment) => {
		commentMap.set(comment.id, { ...comment, replies: [] });
	});

	const nestedComments: NestedComment[] = [];

	comments.forEach((comment) => {
		if (comment.parentCommentId) {
			const parentComment = commentMap.get(comment.parentCommentId);
			if (parentComment) {
				parentComment.replies.push(commentMap.get(comment.id));
			}
		} else {
			nestedComments.push(commentMap.get(comment.id));
		}
	});

	return nestedComments;
};

const nestedComments = nestComments(activeComments);
---

<Layout title={`${activeGenome.commonName} Â· UGNR`}>
	<main class="">
		<GenomeHeader genome={activeGenome} />
		<section class="min-h-96">
			<pre>{JSON.stringify(nestedComments, null, 2)}</pre>
		</section>
	</main>
</Layout>
