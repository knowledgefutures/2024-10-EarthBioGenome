---
import Layout from '~/layouts/Layout.astro';
import authors from '~/data/authors.json';
import genomeNotes from '~/data/genomeNotes.json';
import genomes from '~/data/genomes.json';
import contributors from '~/data/contributors.json';
import AuthorHeader from '~/components/AuthorHeader.astro';
import { getGenomeNote, getGenome } from '~/lib/populateData';
import GenomeList from '~/components/GenomeList';
import type { PopulatedGenome } from '~/types/pubs';

export function getStaticPaths() {
	return authors.map((author) => {
		return { params: { slug: author.slug } };
	});
}
const { slug } = Astro.params;
const activeAuthor = authors.find((author) => {
	return author.slug === slug;
});
if (!activeAuthor) {
	return null;
}

const activeContributors = contributors.filter((contributor) => {
	return contributor.authorId === activeAuthor.id;
});
const populatedContributors = activeContributors.map((contributor) => {
	const genomeNote = getGenomeNote(contributor.genomeNoteId);
	const genome = getGenome(genomeNote.genomeId);
	return { ...contributor, genomeNote, genome };
});
const activeGenomes: PopulatedGenome[] = populatedContributors.map((populatedContributors) => {
	return {
		...populatedContributors.genome,
		genomeNote: populatedContributors.genomeNote,
	};
});
---

<Layout title={`${activeAuthor.name} Â· UGNR`}>
	<main class="">
		<AuthorHeader author={activeAuthor} />
		<section class="w-content-narrow min-h-96 mb-32">
			<GenomeList genomes={activeGenomes} client:only="react" />
		</section>
	</main>
</Layout>
