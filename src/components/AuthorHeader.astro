---
import type { Author, ProjectMember } from '~/types/pubs';
import projectMembers from '~/data/projectMembers.json';
import { getProject } from '~/lib/populateData';
import AuthorAvatar from './AuthorAvatar.astro';

interface Props {
	author: Author;
}

const { author } = Astro.props;

const associatedProjectMember = projectMembers.find((projectMember) => {
	return projectMember.authorId === author.id;
});
const associatedProject = associatedProjectMember
	? getProject(associatedProjectMember.projectId)
	: null;

const tabs = [
	{
		title: 'Genome Notes',
		href: `/author/${author.slug}`,
		active: Astro.url.pathname.endsWith(author.slug),
	},
	{
		title: 'Comments',
		href: `/author/${author.slug}/comments`,
		active: Astro.url.pathname.endsWith('/comments'),
	},
	{
		title: 'Posts',
		href: `/author/${author.slug}/posts`,
		active: Astro.url.pathname.endsWith('/posts'),
	},
	{
		title: 'Co-authors',
		href: `/author/${author.slug}/co-authors`,
		active: Astro.url.pathname.endsWith('/co-authors'),
	},
];
---

<section class="bg-[#f6f3ee] mb-12">
	<div class="w-content-narrow">
		<div class="py-8 flex flex-col items-center md:flex-row md:items-start space-x-4 text-center md:text-left">
			<AuthorAvatar text={author.name[0]} />
			<div class="p-4">
				<h2 class="text-4xl font-bold">{author.name}</h2>
				<div>{author.affiliation}</div>
				<div>ORCID: {author.orcid}</div>
				{
					associatedProject && (
						<div>
							<a href={`/project/${associatedProject.slug}`}>
								{associatedProject.name}
							</a>
						</div>
					)
				}
			</div>
		</div>
		<div class="flex space-x-8 py-4">
			{
				tabs.map((tab) => {
					return (
						<a
							href={tab.href}
							class={
								tab.active ? 'underline underline-offset-4' : 'underline-offset-4'
							}
						>
							{tab.title}
						</a>
					);
				})
			}
		</div>
	</div>
</section>
