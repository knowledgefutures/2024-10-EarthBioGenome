---
import type { Author, ProjectMember } from '~/types/pubs';
import projectMembers from '~/data/projectMembers.json';
import { getProject } from '~/lib/populateData';
import { undefined } from 'astro:schema';

interface Props {
	author: Author;
}

const { author } = Astro.props;

const associatedProjectMember = projectMembers.find((projectMember) => {
	return projectMember.authorId === author.id;
});
const associatedProject = associatedProjectMember
	? getProject(associatedProjectMember.projectId)
	: undefined;

const tabs = [
	{
		title: 'Genome Notes',
		href: `/author/${author.slug}`,
		active: Astro.url.pathname.endsWith(author.slug),
	},
	{
		title: 'Comments',
		href: `/author/${author.slug}/comments`,
		active: Astro.url.pathname.endsWith('/comments'),
	},
	{
		title: 'Posts',
		href: `/author/${author.slug}/posts`,
		active: Astro.url.pathname.endsWith('/posts'),
	},
	{
		title: 'Co-authors',
		href: `/author/${author.slug}/co-authors`,
		active: Astro.url.pathname.endsWith('/co-authors'),
	},
];
---

<section class="">
	<div class="py-8 flex space-x-4">
		<div
			class="rounded w-32 h-32 bg-neutral-400 flex items-center justify-center text-7xl font-bold text-white"
		>
			{author.name[0]}
		</div>
		<div>
			<h2 class="text-4xl font-bold">{author.name}</h2>
			<div>{author.affiliation}</div>
			<div>ORCID: {author.orcid}</div>
			{
				associatedProject && (
					<div>
						<a href={`/project/${associatedProject.slug}`}>{associatedProject.name}</a>
					</div>
				)
			}
		</div>
	</div>
	<div class="flex space-x-8 py-4">
		{
			tabs.map((tab) => {
				return (
					<a
						href={tab.href}
						class={tab.active ? 'underline underline-offset-4' : 'underline-offset-4'}
					>
						{tab.title}
					</a>
				);
			})
		}
	</div>
</section>
